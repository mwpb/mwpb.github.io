(require 'json)

(let ((json-array-type 'list))
    (setq json (json-read-file "../data.json")))

(setq talks (alist-get 'talks json))

(defun format-talk (talk-alist)
  (let ((title (alist-get 'title talk-alist))
	(venue (alist-get 'venue talk-alist))
	(institution (alist-get 'institution talk-alist))
	(year (alist-get 'year talk-alist)))
    (format "<dt>%s</dt>
  <dd>
    <b>%s</b><br />
    %s<br />
    %s
  </dd>" year institution title venue)))

(defun talks-dl ()
  (let ((x (mapcar 'format-talk talks)))
    (format "
<h1>Talks</h1>
<dl class='dl-horizontal'>%s</dl>" (mapconcat 'identity x "\n"))))
(talks-dl)
